{"version":3,"sources":["components/ActiveQuiz/bird.gif","components/FinishedQuiz/eagle.jpg","containers/Layout/Layout.js","components/Header/Categories/Categories.js","components/Header/Logo/Logo.js","components/Header/Score/Score.js","components/Header/Header.js","components/UI/Picture/Picture.js","components/UI/Player/Player.js","components/ActiveQuiz/ActiveQuiz.js","components/Answers/AnswersList/AnswerItem/AnswerItem.js","components/Answers/AnswersList/AnswerList.js","components/Answers/Description/Description.js","components/UI/Button/Button.js","components/Answers/Answers.js","service/data-service.js","service/categories.js","utils/Utils.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","this","props","children","Component","Categories","categories","map","category","index","cls","active","push","key","join","Logo","Score","totalScore","Header","Picture","src","alt","width","height","Player","audio","customProgressBarSection","RHAP_UI","MAIN_CONTROLS","CURRENT_TIME","PROGRESS_BAR","DURATION","showJumpControls","customControlsSection","VOLUME","autoPlayAfterSrcChange","ActiveQuiz","correctAnswer","image","pic","name","AnswerItem","state","onClick","onAnswerClick","answer","id","AnswerList","answers","Description","selectedItem","Fragment","species","description","Button","isEnabled","onButtonClick","title","Answers","selectedAnswerIndex","birdsData","getRandomInt","min","max","Math","ceil","floor","random","FinishedQuiz","onRetry","Quiz","onAnswerClickHandler","answerId","setState","results","Object","keys","includes","correctAnswerIndex","activeQuestion","currentScore","isQuizFinished","isFinished","onNextClickHandler","length","onRetryHandler","a","answerList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a04e72b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bird.0aba4c18.gif\";","module.exports = __webpack_public_path__ + \"static/media/eagle.7ce82e80.jpg\";","import React, {Component} from \"react\";\r\nimport \"./Layout.scss\"\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Layout\">\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\";\r\nimport \"./Categories.scss\"\r\n\r\nconst Categories = props => (\r\n    <div className=\"Categories\">\r\n        {props.categories.map((category, index) => {\r\n            const cls = [\"Categories\", \"item\"]\r\n            if(props.active === index) {\r\n                cls.push(\"active\")\r\n            }\r\n            return (\r\n                <div key={index} className={cls.join(\" \")}>\r\n                    {category}\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n)\r\n\r\nexport default Categories\r\n","import React from \"react\";\r\nimport \"./Logo.scss\"\r\n\r\nconst Logo = props => (\r\n    <div className=\"Logo\">\r\n        <h1>SONG</h1><h1 className=\"Logo blue\">BIRD</h1>\r\n    </div>\r\n)\r\n\r\nexport default Logo\r\n","import React from \"react\";\r\nimport \"./Score.scss\"\r\n\r\nconst Score = props => (\r\n    <div>\r\n        <span>Score: {props.totalScore}</span>\r\n    </div>\r\n)\r\n\r\nexport default Score\r\n","import React from \"react\";\r\nimport \"./Header.scss\"\r\nimport Categories from \"./Categories/Categories\";\r\nimport Logo from \"./Logo/Logo\";\r\nimport Score from \"./Score/Score\";\r\n\r\nconst Header = props => (\r\n    <div className=\"Header\">\r\n       <div className=\"Header top\">\r\n           <Logo/>\r\n           <Score totalScore={props.totalScore}/>\r\n       </div>\r\n       <Categories\r\n           categories={props.categories}\r\n           active={props.active}\r\n       />\r\n    </div>\r\n)\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport \"./Picture.scss\"\r\n\r\nconst Picture = props => {\r\n    return (\r\n        <div className=\"Picture\">\r\n            <img\r\n                src={props.src}\r\n                alt={props.alt}\r\n                width={props.width}\r\n                height={props.height}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Picture\r\n","import React from \"react\";\r\nimport \"./Player.scss\"\r\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\r\nimport 'react-h5-audio-player/src/styles.scss'\r\n\r\nconst Player = props => {\r\n    return (\r\n        <AudioPlayer\r\n            src={props.audio}\r\n            customProgressBarSection={\r\n                [\r\n                    RHAP_UI.MAIN_CONTROLS,\r\n                    RHAP_UI.CURRENT_TIME,\r\n                    RHAP_UI.PROGRESS_BAR,\r\n                    RHAP_UI.DURATION\r\n                ]\r\n            }\r\n            showJumpControls={false}\r\n            customControlsSection={[RHAP_UI.VOLUME]}\r\n            autoPlayAfterSrcChange={false}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from \"react\";\r\nimport \"./ActiveQuiz.scss\"\r\nimport Picture from \"../UI/Picture/Picture\";\r\nimport Player from \"../UI/Player/Player\";\r\nimport pic from \"./bird.gif\"\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className=\"ActiveQuiz\">\r\n        <Picture\r\n            src={props.correctAnswer ? props.correctAnswer.image : pic}\r\n            alt=\"Title\"\r\n            width={150}\r\n            height={150}\r\n        />\r\n        <div className=\"QuizCard\">\r\n            <div className=\"QuizAnswer\">{props.correctAnswer ? props.correctAnswer.name : <h1>*****</h1>}</div>\r\n            <Player audio={props.audio}/>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz\r\n","import React from \"react\";\r\nimport \"./AnswerItem.scss\"\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [\"li-btn\"]\r\n\r\n    if(props.state) {\r\n        cls.push(props.state)\r\n    }\r\n\r\n    return (\r\n        <li className=\"list-group-item\"\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            <span className={cls.join(' ')}></span>\r\n            {props.answer.name}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem\r\n","import React from \"react\";\r\nimport \"./AnswerList.scss\"\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswerList = props => {\r\n    //  const arr = props.answers\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <ul className=\"item-list list-group\">\r\n                {\r\n                    props.answers.map((answer, index) => {\r\n                        return (\r\n                            <AnswerItem\r\n                                key={index}\r\n                                answer={answer}\r\n                                onAnswerClick={props.onAnswerClick}\r\n                                state={props.state ? props.state[answer.id] : null}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswerList\r\n","import React from \"react\";\r\nimport \"./Description.scss\"\r\nimport Picture from \"../../UI/Picture/Picture\";\r\nimport Player from \"../../UI/Player/Player\";\r\n\r\nconst Description = props => {\r\n    const abc = props.selectedItem\r\n    return (\r\n        <div className=\"Description col-md-6\">\r\n            <div className=\"BirdCard\">\r\n             { !props.selectedItem ?\r\n                <div>\r\n                    <p>Listen to the player</p>\r\n                    <p> Select a bird from the list</p>\r\n                </div>\r\n            :\r\n                <React.Fragment>\r\n                <div className=\"Title\">\r\n                    <Picture\r\n                        src={props.selectedItem.image}\r\n                        alt={props.selectedItem.name}\r\n                        width={100}\r\n                        height={100}\r\n                    />\r\n                    <div className=\"ShortDescription\">\r\n                        <div>{props.selectedItem.name}</div>\r\n                        <div>{props.selectedItem.species}</div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>{props.selectedItem.description}</div>\r\n                    <Player audio={props.selectedItem.audio}/>\r\n                </div>\r\n                </React.Fragment>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Description\r\n","import React from \"react\";\r\nimport \"./Button.scss\"\r\n\r\nconst Button = props => {\r\n    const cls = ['btn']\r\n    if (props.isEnabled) {\r\n        cls.push('btn-success')\r\n    } else {\r\n        cls.push('btn-secondary disabled')\r\n    }\r\n    return (\r\n        <div className=\"Button\">\r\n            <button\r\n                className={cls.join(' ')}\r\n                onClick={props.onButtonClick}\r\n            >\r\n                {props.title}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\";\r\nimport \"./Answers.scss\"\r\nimport AnswerList from \"./AnswersList/AnswerList\";\r\nimport Description from \"./Description/Description\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst Answers = props => {\r\n    const arr = props.selectedAnswerIndex\r\n    return (\r\n        <div className=\"Answers\">\r\n            <div className=\"row mb2\">\r\n                <AnswerList\r\n                    state={props.state}\r\n                    answers={props.answers}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                />\r\n                <Description\r\n                    selectedItem={props.selectedAnswerIndex || props.selectedAnswerIndex > -1 ? props.answers[props.selectedAnswerIndex] : null}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answers\r\n\r\n","const birdsData = [\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Ворон',\r\n            species: 'Corvus corax',\r\n            description: 'Ворон – крупная птица. Длина тела достигает 70 сантиметров, размах крыльев – до полутора метров. Вороны населяют окрестности Тауэра. В Англии бытует поверье, что в день, когда черные вороны улетят от Тауэра, монархия рухнет.',\r\n            image: 'https://live.staticflickr.com//65535//49298804222_474cfe8682.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/XIQVMQVUPP/XC518684-Grands%20corbeaux%2009012020%20Suzon.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Журавль',\r\n            species: 'Grus grus',\r\n            description: 'Звуки, издаваемые журавлем, похожи на звонкое «кур-лы – кур-лы». Журавли чаще всего поют дуэтом – одна птица начинает запев со слога «кур», а вторая подхватывает «лы». Если птица поёт одна, то она издает только звук «кур».',\r\n            image: 'https://live.staticflickr.com/65535/49221158846_b0b69a58f1.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC512582-190604_1087_Grus_tok.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ласточка',\r\n            species: 'Delichon urbicum',\r\n            description: 'Для ласточек характерно негромкое щебетание. Песни ласточек не смолкают на протяжении всего лета. Исследователи различают у птиц до 6 щебечущих звуков: «вит», «ви-вит», «чивит», «чиривит» и т.п. Ласточки любят петь дуэтом.',\r\n            image: 'https://live.staticflickr.com//65535//48539007512_5029d2a9a0.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489247-190724_09.10h_huiszwaluw_biesbosch_amaliahoeve_roep_100%2Bex_fouragerend_gezien_%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Козодой',\r\n            species: 'Caprimulgus europaeus',\r\n            description: 'Козодой – неприметная птица, известная благодаря своему голосу. Песня козодоя звучит как монотонная трель похожая на тарахтение мотоцикла. Такое дребезжание слышно от заката до рассвета, его тональность, частота и громкость изменяются. ',\r\n            image: 'https://live.staticflickr.com/65535/48456345286_dbc8530027.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC486956-190623_22.37h_nachtzwaluw_rechte%20heide_zang_ad%20_2ex_gezien_.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Кукушка',\r\n            species: 'Cuculus canorus',\r\n            description: 'Кукушку назвали так из-за особенностей ее песен. Звонкое «ку-ку» не спутать ни с какой другой птицей. Кукушки не строят гнезда, их потомство выращивают другие виды пернатых, которым кукушки подбрасывают свои яйца.',\r\n            image: 'https://live.staticflickr.com/65535/48377838151_e15f430ec1.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501461-190616_08.13h_koekoek_brabantse%20biesbosch%20jantjesplaat_roep_1%20ex_ad%20m_ter%20plaatse%20zingend_gezien_.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Синица',\r\n            species: 'Parus major',\r\n            description: 'В щебетании синиц различают более 40 различных звуковых сочетаний. Поют они практически круглый год, немного затихая только зимой. Синицы настоящие санитары леса. Одна пара синиц в период гнездования оберегает от вредителей десятки деревьев.',\r\n            image: 'https://live.staticflickr.com//65535//49366042493_c48c81d58d.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/RFGQDPLDEC/XC518417-Kj%C3%B8ttmeis%20XC%20Helg%C3%B8ya%20Elias%20A.%20Ryberg20200108133922_079.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Воробей',\r\n            species: 'Passer domesticus',\r\n            description: 'Воробьи являются самыми известными и узнаваемыми пернатыми. Их легко узнать по пестрому оперению и задорному чириканью. Воробьи относятся к синатропному виду — они селятся поблизости к человеческому жилищу.',\r\n            image: 'https://live.staticflickr.com//65535//49366595303_06cf65b07e.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/CXFHOPIVAS/XC503224-191020_0134.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Грач',\r\n            species: 'Corvus frugilegus',\r\n            description: 'Грачи очень умные и сообразительные птицы. С помощью клюва они создают и используют простейшие орудия. У грачей развит рефлекс на звуки трактора. Услышав «тарахтение», они летят на звук – трактор пашет землю, значит, в этом месте много корма.',\r\n            image: 'https://live.staticflickr.com//65535//49347123322_291c86b016.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/RLRHCUIPIY/XC512540-gawron%20Suble%2019.12.19%20%2012.35.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Галка',\r\n            species: 'Coloeus monedula',\r\n            description: 'Слово «галка» произошло из старославянского языка и переводится как «чёрный». Этим словом часто называют воронов или других черных птиц. Латинское название галки «monedula» связывают со словами монета за любовь птицы к блестящим и ярким вещам.',\r\n            image: 'https://live.staticflickr.com//65535//49237149586_993cf685c5.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC510498-Coloeus%20monedula_2019.11.13_11.55_01.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Певчий дрозд',\r\n            species: 'Turdus philomelos',\r\n            description: 'Дрозд — лучший певец из отряда воробьиных. Песня состоит только из красивых звучных свистов и коротких трелей. Чаще всего её можно услышать в утреннее и вечернее время. Поют дрозды в течении всего периода гнездования.',\r\n            image: 'https://live.staticflickr.com/65535/48979125763_e2534f54bd.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513326-190704_1146_TF-Glogow.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Сорока',\r\n            species: 'Pica pica',\r\n            description: 'Сорока очень трудолюбивая птица. Она строит до восьми гнёзд, а потом выбирает из них самое лучшее. Вход в гнездо сорок всегда обращен на юг, чтобы в жилище было теплее. Сороки являются единственными птицами, которые узнают себя в зеркале.',\r\n            image: 'https://live.staticflickr.com//65535//49360363066_ff02bb6a73.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC500868-Pica%20pica2019.08.23_09.18_02.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Сойка',\r\n            species: 'Garrulus glandarius',\r\n            description: 'Когда сойка волнуется, хохолок на её голове взъерошивается. Птица старается создать устрашающее зрелище. Сойки умеют имитировать голоса других птиц, животных и звуки, которые создает человек. На зиму они делают большие запасы желудей и орехов.',\r\n            image: 'https://live.staticflickr.com//65535//49369678956_9a7465c7f4.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/TFOGOENSTQ/XC501517-191008_1590%201300.%20Eichelh%C3%A4her%20D%2C%20NW%2C%20LEV.%20Stephan%20Risch.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Зяблик',\r\n            species: 'Fringilla coelebs',\r\n            description: 'В дикой природе насчитывается 450 видов зябликов. Зимой зяблики ведут стайный образ жизни. Иногда в их семьях можно увидеть воробьев. Запевают зяблики весной, с наступлением брачного периода. Их пение – это заливистые многоминутные рулады.',\r\n            image: 'https://live.staticflickr.com/65535/49143150817_2d3a2f6c1e.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC512407-150622_03%20zi%C4%99ba%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Клёст',\r\n            species: 'Loxia curvirostra',\r\n            description: 'Клестов называют «рождественскими» птицами. В естественных условиях они дают потомство зимой – в январе. Эти птицы утепляют свои гнезда мхом и шерстью животных, потому птенцам не холодно. В поисках шишек клесты могут улетать за 3500 км от гнезда.',\r\n            image: 'https://live.staticflickr.com//65535//49365470123_f2de66bb35.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/OTVUCEGYZN/XC495381-Kruisbek%20roep%20NHD%20290619.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Горлица',\r\n            species: 'Streptopelia turtur',\r\n            description: 'Горлица обитает в смешанных и широколиственных лесах, а также в городских парках и поселках. Птицы часто выбирают места жизни рядом с человеком и легко привыкают к людям. Благодаря мелодичному приятному пению горлиц часто разводят в домашних условиях.',\r\n            image: 'https://live.staticflickr.com/65535/48063004977_84252f9ceb.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC324106-Turkawka_Streptopelia_turtur_Poland_Jarek_Matusiak_2011625_07.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Дятел',\r\n            species: 'Dendrocopos major',\r\n            description: 'Дятел – заметная и шумная птица, часто живет рядом с человеком. С середины января до конца июня можно услышать «барабанную дробь» дятлов – трель от вибрации веток под быстрыми ударами клюва птицы. В хорошую погоду дробь слышна в радиусе 1,5 км.',\r\n            image: 'https://live.staticflickr.com/65535/49339376578_e933426455.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC518928-AB-017%20dzi%C4%99cio%C5%82%20du%C5%BCy%20agresja%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Удод',\r\n            species: 'Upupa epops',\r\n            description: 'Удоды предпочитают жить на открытых ландшафтах с отдельными деревьями или рощами. Наиболее удобными для птицы являются лесостепь и саванна. Удод может выбирать места жительства рядом с человеком: пастбища, виноградники, фруктовые сады.',\r\n            image: 'https://live.staticflickr.com//65535//49226383598_6f8be86a06.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC477326-dudek%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Стриж',\r\n            species: 'Apus apus',\r\n            description: 'Стрижа можно увидеть практически в каждом уголке планеты. Они обитают как в лесных зонах, так и на открытых местностях. Живут стрижи крупными стаями. Большие колонии этих птиц можно увидеть в городах или на прибрежных скалах.',\r\n            image: 'https://live.staticflickr.com//65535//48386150031_7b749df74b.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/TMUAWSDHDJ/XC511871-G.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Жаворонок',\r\n            species: 'Alauda arvensis',\r\n            description: 'Жаворонки — перелетные птицы. С начала сентября они отлетают на юг. Возвращаются они в начале марта, независимо от того, сошел снег или нет. По прилету жаворонков определяли наступление весны и пору, когда пора пахать землю.',\r\n            image: 'https://live.staticflickr.com/65535/47105096764_f751fba568.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC462158-Skowronek_Alauda_arvensis_Poland_Jarek_Matusiak_%20-006%20skowronek%20%282%29.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Соловей',\r\n            species: 'Luscinia luscinia',\r\n            description: 'Соловьи поют с начала мая и до конца лета. Каждая песня соловья состоит из 12 повторяющихся элементов, которые еще называют коленами. Кроме собственных трелей, соловьи легко и хорошо перенимают пение других птиц.',\r\n            image: 'https://live.staticflickr.com/7605/27669397735_f3c21758f2.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/HILVWSADVL/XC513809-R07_0052%20Thrush%20Nightingale%20Snipe.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Скворец',\r\n            species: 'Sturnus vulgaris',\r\n            description: 'Скворцы - перелётные птицы. Синхронный перелет больших стай скворцов называется мурмурацией. Это красивое и завораживающее явление – множество птиц будто танцуют в воздухе, образуя замысловатые фигуры, которые уменьшаются и увеличиваются в небе.',\r\n            image: 'https://live.staticflickr.com/65535/49357593971_9509fe1d7c.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC515519-2020.01.01_17.24_01.MP3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Иволга',\r\n            species: 'Oriolus oriolus',\r\n            description: 'Мелодичность голоса иволги сравнивают со звучанием флейты. Человеку сложно разглядеть иволгу, так как она обитает высоко на деревьях. Иволга не только очень красивая, но и  полезная птица. Она уничтожает ядовитых гусениц, которых не поедают другие птицы.',\r\n            image: 'https://live.staticflickr.com/65535/47102184004_58a93380b9.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC491801-2019.07.07_06.28_01.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Свиристель',\r\n            species: 'Bombycilla garrulus',\r\n            description: 'У свиристели очень цепкие коготки, что помогает птице удерживаться на ветках и склевывать ягоды, которые труднее всего достать. В период ухаживаний самец предлагает самке ягоду или другое угощение. Если самка его принимает, то птицы создают пару.',\r\n            image: 'https://live.staticflickr.com//65535//49367433842_1b06da0e6b.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC517421-AB-004%20%282%29%20jemio%C5%82uszka.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Щегол',\r\n            species: 'Carduelis carduelis',\r\n            description: 'Щеглы поют красиво и мелодично. И в природе, и в неволе они щебечут почти круглый год. В пении щегла различают более 20 переливчатых трелей. Щеглы привыкают к людям, и даже могут возвратиться к хозяину после того, как их выпустили на волю',\r\n            image: 'https://live.staticflickr.com//65535//49366257253_db3ce48b9a.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489265-190724_07.58h_putter_biesbosch_%20boompjes%20langs%20open%20water_zang_1ex_ad_niet%20gezien_.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Орёл',\r\n            species: 'Aquila nipalensis',\r\n            description: 'В древние времена орел был символом солнца. Орлы часто парят над землей, при этом скорость их перемещения может достигать 240 км/ч. Иллюзия медленного движения происходит из-за высоты полета – более 700 метров',\r\n            image: 'https://live.staticflickr.com//4835//43867392960_7105d71e19.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/KTBTZAHSXF/10_Aquila_nipalensis_al02D85.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Коршун',\r\n            species: 'Milvus migrans',\r\n            description: 'Коршуны – крупные хищники, в высоту они достигают около полуметра, а вес взрослых особей достигает 1 кг. Крылья узкие и длинные, их размах составляет 1,5 м. Коршуны часто гнездятся большими стаями и даже образуют крупные колонии.',\r\n            image: 'https://live.staticflickr.com//65535//48701190276_ee2a9ed594.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/SDPCHKOHRH/XC485740-2019-06-22%20Selenga%20Milan%20brun%20cris%20de%20quemandage%203.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Лунь',\r\n            species: 'Circus cyaneus',\r\n            description: 'Лунь – это небольшой сокол. Питается в основном мышевидными грызунами, основа его рациона – полёвки, хомяки, мыши. Оперение луня может быть пепельно-серым. С такой птицей связано сравнение «седой, как лунь».',\r\n            image: 'https://live.staticflickr.com/4480/37240531151_b74619c99d.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513498-190709_1175_Cir.cyan-f.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Сокол',\r\n            species: 'Falco peregrinus',\r\n            description: 'Латинское название сокола Falco произошло от слова «серп» из-за серповидной формы крыльев. Длинные и широкие крылья позволяют соколу высоко подниматься в небо и свободно парить. Скорость полёта сокола достигает 280-320 километров в час.',\r\n            image: 'https://live.staticflickr.com//65535//49310710607_92a3a145a9.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC496049-Pilgrimsfalk_06.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Ястреб',\r\n            species: 'Accipiter gentilis',\r\n            description: 'Для всех ястребов характерны широкие и короткие крылья. Ещё один отличительный признак - белые «брови» над глазами. Славянские дружинники размещали изображение ястреба на своих знаменах, как символ отваги, мощи и безжалостности к врагам.',\r\n            image: 'https://live.staticflickr.com//65535//49024617331_b9d0d2c9b3.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC512740-Duvh%C3%B6k_09.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Филин',\r\n            species: 'Bubo bubo',\r\n            description: 'Полет филина бесшумный, зрение очень острое. Эти особенности делают птицу непревзойденным ночным охотником. У филина нет естественных врагов, ни один зверь не охотится на взрослых птиц. А вот на птенцов нападают лисы и волки.',\r\n            image: 'https://live.staticflickr.com/65535/48137123012_393653c2e4.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/WNLIDKJKXT/XC518386-sense%20t%C3%ADtol.mp3'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 1,\r\n            name: 'Альбатрос',\r\n            species: 'Diomedea exulans',\r\n            description: 'Альбатрос - самая крупная летающая птица в мире. Размах крыльев достигает три с половиной, вес - десять килограммов. Большую часть жизни альбатросы проводят в воздухе, покрывая над океанскими просторами огромные расстояния',\r\n            image: 'https://live.staticflickr.com/7557/16260253965_8e9430cb66.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/WOEAFQRMUD/XC293087-Diomedea%20exulans151120_T254.mp3'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Олуша',\r\n            species: 'Sula nebouxii',\r\n            description: 'Особенностью голубоногой олуши является не только насыщенный ярко-синий цвет лапок, но еще и тот факт, что они очень теплые. В то время как другие виды птиц греют кладки своим телом, голубоногая олуша делает это с помощью лапок',\r\n            image: 'https://live.staticflickr.com/800/40645471394_4422e69ed8.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/YHKQPPJDVP/XC411507-171217_1491%20BF%20Booby%205ft%20IDLP%201230%20mp3%20amp.mp3'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Буревестник',\r\n            species: 'Puffinus griseus',\r\n            description: 'Размеры буревестниковых разные. Самые маленькие из них в длину составляют до 25 см, самые большие - до 1 м, при размахе крыльев около 2 м. Существует поверье, что появление буревестника в воздухе предвещает бурю, о чем говорит само название птицы.',\r\n            image: 'https://live.staticflickr.com//607//22136056020_935cb113f9.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/XQEVNREHJY/SHEARWATER%20Christmas%20Island_04_Motu_Isla%20de%20Pascua-Easter%20Island_CH_4MAR03_Alvaro%20Jaramillo.mp3'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Пеликан',\r\n            species: 'Pelecanus',\r\n            description: 'Пеликаны — обитатели морей и рек. Ходят они неуклюже, но хорошо летают и плавают. Питаются в основном рыбой, устраивают коллективные охоты — выстроившись полукругом хлопают по воде крыльями и клювами и вытесняют напуганную рыбу на мелководье.',\r\n            image: 'https://live.staticflickr.com/65535/49159147156_dcbbb5c12a.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/XAMHIHFTZG/XC331138-call1.mp3'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Пингвин',\r\n            species: 'Aptenodytes forsteri',\r\n            description: 'Самец императорского пингвина достигает роста 130 см, его масса может приближаться к 50 кг. Из всех современных пингвинов этот вид – самый крупный. Питание пингвина состоит из рыбы, кальмаров и криля. Охотятся птицы в океане большими группами.',\r\n            image: 'https://live.staticflickr.com/5202/5252413926_8e013a3efd.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/OOECIWCSWV/XC449827-LS100829%20King%20Penguin%20call%20A.mp3'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Чайка',\r\n            species: 'Larus argentatus',\r\n            description: 'Чайки населяют берега морей, озёр, рек, водохранилищ, болот, часто гнездятся на островах. С конца прошлого века чайки стали появляться в крупных городах, где устраивает гнёзда на крышах зданий. Все чайки ведут колониальный образ жизни.',\r\n            image: 'https://live.staticflickr.com/65535/48577115317_7034201dde.jpg',\r\n            audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501190-190801_06.50h_zilvermeeuw_duinen%20van%20goeree_roep_2ex_overvliegend_gezien_.mp3'\r\n        }\r\n    ]\r\n];\r\n\r\nexport default birdsData;\r\n","const categories = [\r\n    \"Warm up\",\r\n    \"Country birds\",\r\n    \"Forest birds\",\r\n    \"Singing birds\",\r\n    \"Predators\",\r\n    \"Sea birds\"\r\n]\r\n\r\nexport default categories\r\n","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n","import React from \"react\";\r\nimport \"./FinishedQuiz.scss\"\r\nimport Button from \"../UI/Button/Button\";\r\nimport pic from \"./eagle.jpg\"\r\n\r\nconst FinishedQuiz = props => {\r\n    return (\r\n        <div className=\"FinishedQuiz\">\r\n            <p>Congratulations!</p>\r\n            {props.totalScore === 36 ?\r\n                <div className=\"kingOfTheGame\">\r\n                    <p><h1>You are the king of the game!!!</h1></p>\r\n                    <img src={pic} width=\"400\" height=\"300\"/>\r\n                </div>\r\n             : null\r\n            }\r\n            <p>Your total score: {props.totalScore}</p>\r\n            <Button\r\n                onButtonClick={props.onRetry}\r\n                title=\"Repeat the quiz\"\r\n                isEnabled={true}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz\r\n","import React, {Component} from \"react\";\r\nimport \"./Quiz.scss\"\r\nimport Header from \"../../components/Header/Header\";\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport Answers from \"../../components/Answers/Answers\";\r\nimport birdsData from \"../../service/data-service\";\r\nimport categories from \"../../service/categories\"\r\nimport {getRandomInt} from \"../../utils/Utils\"\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\n\r\nclass Quiz extends Component {\r\n\r\n    constructor(props ) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isFinished: false,\r\n            totalScore: 0,\r\n            activeQuestion: 0,\r\n            currentScore: 0,\r\n            correctAnswerIndex: 0,\r\n            correctAnswer: null,\r\n            selectedAnswerIndex: null,\r\n            results: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const a = getRandomInt(0, 5)\r\n        this.setState({\r\n            correctAnswerIndex: a,\r\n            currentScore: birdsData[this.state.activeQuestion].length\r\n        })\r\n    }\r\n\r\n    onAnswerClickHandler = (answerId) => {\r\n\r\n        this.setState({\r\n            selectedAnswerIndex: answerId-1\r\n        })\r\n\r\n        if (this.state.results) {\r\n            const key = Object.keys(this. state.results)\r\n            if (key.includes(answerId + \"\")) {\r\n                return\r\n            }\r\n        }\r\n\r\n        const results = this.state.results\r\n        if(answerId - 1 === this.state.correctAnswerIndex) {\r\n            results[answerId] = 'success'\r\n\r\n            this.setState({\r\n                correctAnswer: birdsData[this.state.activeQuestion][this.state.correctAnswerIndex],\r\n                results,\r\n                totalScore: this.state.totalScore + this.state.currentScore\r\n            })\r\n\r\n            if (this.isQuizFinished()) {\r\n                this.setState({isFinished: true})\r\n            }\r\n        } else {\r\n            results[answerId] = 'error'\r\n            this.setState({\r\n                results,\r\n                currentScore: this.state.currentScore - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === birdsData.length\r\n    }\r\n\r\n    onNextClickHandler = () => {\r\n        this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            currentScore: birdsData[this.state.activeQuestion].length,\r\n            correctAnswerIndex: getRandomInt(0, 5),\r\n            correctAnswer: null,\r\n            selectedAnswerIndex: null,\r\n            results: {}\r\n        })\r\n    }\r\n\r\n    onRetryHandler = () => {\r\n        this.setState({\r\n            isFinished: false,\r\n            totalScore: 0,\r\n            activeQuestion: 0,\r\n            currentScore: 0,\r\n            correctAnswerIndex: 0,\r\n            correctAnswer: null,\r\n            selectedAnswerIndex: null,\r\n            results: {}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const answerList = birdsData[this.state.activeQuestion]\r\n        return (\r\n            <div className=\"Quiz\">\r\n                <Header\r\n                    totalScore={this.state.totalScore}\r\n                    categories={categories}\r\n                    active={this.state.activeQuestion}\r\n                />\r\n                {\r\n                    this.state.isFinished ?\r\n                        <FinishedQuiz\r\n                            totalScore={this.state.totalScore}\r\n                            onRetry={this.onRetryHandler}\r\n                        />\r\n                        :\r\n                        <React.Fragment>\r\n                            <ActiveQuiz\r\n                                correctAnswer={this.state.correctAnswer}\r\n                                audio={answerList[this.state.correctAnswerIndex].audio}\r\n                            />\r\n                            <Answers\r\n                                answers={answerList}\r\n                                selectedAnswerIndex={this.state.selectedAnswerIndex}\r\n                                onAnswerClick={this.onAnswerClickHandler}\r\n                                state={this.state.results}\r\n                            />\r\n                            <Button\r\n                                isEnabled={this.state.selectedAnswerIndex === this.state.correctAnswerIndex}\r\n                                onButtonClick={this.onNextClickHandler}\r\n                                title=\"Next level\"\r\n                            />\r\n                        </React.Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n","import React from 'react';\r\nimport 'bootswatch/dist/slate/bootstrap.min.css'\r\n/*import \"~bootswatch/dist/slate/variables\";\r\nimport \"~bootstrap/scss/bootstrap\";\r\nimport \"~bootswatch/dist/slate/bootswatch\";*/\r\nimport './App.scss';\r\nimport Layout from \"./containers/Layout/Layout\";\r\nimport Quiz from \"./containers/Quiz/Quiz\";\r\n\r\nfunction App() {\r\n  return(\r\n      <Layout>\r\n          <Quiz />\r\n      </Layout>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}